// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  weight        Float
  date_of_birth DateTime
  profile_pic   String?     
  gender    Int      // 0 = Female, 1 = Male
  bloodGroup String?
  created_at    DateTime @default(now())
  appointments  Appointment[]
  prescriptions Prescription[]
  vitals  Vital[]
  @@map("patients")
}

model Doctor {
  id              Int      @id @default(autoincrement())
  name            String
  email           String   @unique
  password        String
  yearsExperience Int?
  profilePicture  String?  // Optional URL or file path
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
  appointments    Appointment[]
  schedules Schedule[]
  prescriptions Prescription[]
  vitals  Vital[]
   @@map("doctors")
}
model Prescription {
  id           Int       @id @default(autoincrement())
  doctorId     Int
  patientId    Int
  medicineName String
  duration     String
  frequency    String
  quantity     Int
  createdAt    DateTime  @default(now())

  
  doctor       Doctor    @relation(fields: [doctorId], references: [id])
  patient      Patient   @relation(fields: [patientId], references: [id])
   @@map("prescriptions")
}
model Appointment {
  id         Int       @id @default(autoincrement())
  doctorId   Int
  doctor     Doctor    @relation(fields: [doctorId], references: [id])
  patientId  Int?
  patient    Patient?  @relation(fields: [patientId], references: [id])
  dateTime   DateTime
  status     String    // e.g., "pending", "confirmed", 
  bookedVia  String    // e.g., "text", "voice"
  symptoms   String?
  createdAt  DateTime  @default(now())

  @@index([doctorId])
  @@index([patientId])
  @@map("appointments")
}


model Schedule {
  id           Int       @id @default(autoincrement())
  startTime    String
  endTime      String
  offdays      String[]   // e.g., ["Monday", "Wednesday"]
  slotDuration Int       // duration in minutes
  doctorId     Int
  doctor       Doctor    @relation(fields: [doctorId], references: [id])

  @@map("schedules")
}

model Vital {
  id               String   @id @default(uuid())
  patientId        Int
  doctorId         Int
  healthPercentage Float
  heartRate        Int
  bloodPressure    String
  temperature      Float
  bloodGlucose     Float
  createdAt        DateTime @default(now())

  patient          Patient  @relation(fields: [patientId], references: [id])
  doctor           Doctor   @relation(fields: [doctorId], references: [id])
  @@map("vitals")
}
