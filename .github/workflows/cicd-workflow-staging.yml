name: CICD

on:
  push:
    branches: [stage]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Push backend image
        working-directory: ./SmartClinic-Server 
        run: |
          docker build -t hasanmawasi/smartclinic-backend:${{ github.sha }} .
          docker push hasanmawasi/smartclinic-backend:${{ github.sha }}


      - name: Push frontend image
        working-directory: ./SmartClinic-Web/doctor-app 
        run: |
          docker build -t hasanmawasi/smartclinic-frontend:${{ github.sha }} .
          docker push hasanmawasi/smartclinic-frontend:${{ github.sha }}

      
  deploy:
    needs: build
    runs-on: [self-hosted]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull Latest Images
        run: |
          docker pull hasanmawasi/smartclinic-frontend:${{ github.sha }}
          docker pull hasanmawasi/smartclinic-backend:${{ github.sha }}
      - name: Stop and Remove Old Containers
        run: docker-compose -f docker-compose.prod.yml down
      - name: Start Services
        run: |
          TAG=${{ github.sha }} docker-compose -f docker-compose.yml up -d
      # - name: SSH into EC2 instance and deploy with Docker Compose
      #   uses: appleboy/ssh-action@v1
      #   with:
      #     host: ${{ secrets.SERVER_IP }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
      #     script: |
      #         cd /home/ubuntu/SmartClinic   # wherever your project is
      #         git fetch origin
      #         git reset --hard origin/stage         # update latest code and docker-compose.yml
      #         docker-compose pull           # pull latest backend and frontend images
      #         docker-compose down
      #         docker-compose up -d --build          # recreate containers with new images

